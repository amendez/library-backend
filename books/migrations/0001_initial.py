# Generated by Django 5.0.2 on 2024-05-24 03:51

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField()),
                ('edition', models.CharField(max_length=200)),
                ('format', models.CharField(blank=True, choices=[('Audible Audio', 'Audible Audio'), ('Audio CD', 'Audio CD'), ('Audiobook', 'Audiobook'), ('Chapbook', 'Chapbook'), ('ebook', 'ebook'), ('Hardcover', 'Hardcover'), ('Kindle Edition', 'Kindle Edition'), ('Mass Market Paperback', 'Mass Market Paperback'), ('Nook', 'Nook'), ('Paperback', 'Paperback'), ('Trade Paperback', 'Trade Paperback')], null=True)),
                ('pages', models.IntegerField(default=0)),
                ('rating', models.FloatField(default=0)),
                ('rating_count', models.IntegerField(default=0)),
                ('review_count', models.IntegerField(default=0)),
                ('title', models.CharField(max_length=200)),
                ('stock', models.IntegerField(default=1)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('authors', models.ManyToManyField(related_name='books', to='books.author')),
                ('genres', models.ManyToManyField(related_name='books', to='books.genre')),
            ],
        ),
    ]
